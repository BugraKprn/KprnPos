@{
    ViewData["Title"] = "Masa Ve Bölge Yönetimi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .page-header {
            margin-bottom: 5px;
        }

        .description {
            margin-top: 0;
            margin-bottom: 20px;
        }

        .button-container {
            margin-top: 10px;
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .btn-tableAndArea {
            background: 0 0;
            border: 0;
            box-shadow: none;
            color: #d32f2f;
            padding: 10px 20px;
            font-size: 14px;
            cursor: pointer;
        }

        .card-body {
            padding: 20px;
        }

        .regions-list {
            margin-bottom: 20px;
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding: 10px 0;
            border-bottom: 1px solid #ddd;
        }

        .region-box {
            background: #E9E9E9;
            padding: 10px;
            border-radius: 50px;
            cursor: pointer;
            position: relative;
            min-width: 150px;
            max-width: 300px;
            text-align: center;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .region-box.active {
                border-bottom: 2px solid black;
            }

        .drop-area {
            width: 1150px;
            height: 800px;
            background-color: #f0f0f0;
            border: 2px dashed #ccc;
            position: relative;
            margin: 0 auto;
            overflow: hidden;
        }

        .draggable-box {
            position: absolute;
            cursor: move;
            width: 170px;
            height: 170px;
            background-color: transparent;
            border-radius: 5px;
        }

        .table-content {
            position: relative;
            width: 100%;
            height: 100%;
        }

        .table-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .table-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 14px;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
            font-weight: bold;
        }

        .modal-dialog {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: calc(100% - 1rem);
        }

        .ui-state-highlight {
            height: 2.5em;
            line-height: 1.2em;
            background: #f0f0f0;
            border: 1px dashed #ccc;
        }


    </style>
}

<div class="page-wrapper">
    <div class="content">
        <div class="page-header">
            <div style="display:flex; align-items:center; gap: 5px;">
                <h4 style="margin: 0;">Tanımlamalar</h4>><h6 style="margin: 0; font-weight: normal;">Masa Ve Bölgeler</h6>
            </div>
        </div>
        <p class="description">Restoranınıza ait masa ve bölgeleri bu ekrandan düzenleyebilirsiniz.</p>

        <div class="card">
            <!-- Butonlar -->
            <div class="button-container">
                <button class="btn-tableAndArea btn-addArea"><i class="fa-solid fa-plus"></i> Yeni Bölge Ekle</button>
                <button class="btn-tableAndArea btn-editArea"><i class="fa-solid fa-table-cells-large"></i> Bölgeleri Düzenle</button>
                <button class="btn-tableAndArea btn-moveArea"><i class="fa-solid fa-arrow-up-wide-short"></i> Bölgeleri Sırala</button>
                <button class="btn-tableAndArea"><i class="fa-solid fa-check-double"></i> Bölge Düzenini Sıfırla</button>
                <button class="btn-tableAndArea"><i class="fa-solid fa-table-cells"></i> Toplu Masa Ekleme</button>
                <button class="btn-tableAndArea"><i class="fa-solid fa-plus"></i> Yeni Masa Ekle</button>
            </div>

            <div class="scrollable-content">
                <div class="card-body">
                    <!-- Bölge Listeleme -->
                    <div class="regions-list">
                        @foreach (var area in Model.TableAreas)
                        {
                            <div class="region-box" data-id="@area.TableAreaId">@area.AreaName</div>
                        }
                    </div>
                    <div class="drop-area"></div>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Bölge Ekleme Modal -->
<div class="modal fade" id="addAreaModal" tabindex="-1" role="dialog" aria-labelledby="regionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="regionModalLabel">Bölge Tanımlama</h5>
            </div>
            <div class="modal-body">
                <p>Yeni bir bölge tanımlayın</p>
                <div class="form-group">
                    <label for="regionName">Bölge Adı: *</label>
                    <input type="text" class="form-control" id="regionName" placeholder="Bölge Adı Giriniz">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Bölgeleri düzenlemeden önce listeleyen Modal -->
<div class="modal fade" id="listAreaModal" tabindex="-1" role="dialog" aria-labelledby="editRegionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRegionModalLabel">Bölge Düzenleme</h5>
                <button type="button" class="btn btn-danger btn-addArea"><i class="fa-solid fa-plus"></i> Yeni</button>
            </div>
            <div class="modal-body">
                <p>Bölgelerinizi aşağıdan düzenleyebilirsiniz.</p>
                <ul class="list-group" id="regionList">
                    <!-- Bölgeler burada listelenecek -->
                </ul>
            </div>
        </div>
    </div>
</div>

<!-- Güncelleme Modalı -->
<div class="modal fade" id="updateAreaModal" tabindex="-1" role="dialog" aria-labelledby="updateAreaModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateAreaModalLabel">Bölge Düzenleme</h5>
            </div>
            <div class="modal-body">
                <p>Bölge adını aşağıdaki alana girin:</p>
                <input type="text" id="editRegionName" class="form-control" placeholder="Bölge Adı">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" id="saveRegionBtn" class="btn btn-primary">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Sıralama Modalı -->
<div class="modal fade" id="sortRegionsModal" tabindex="-1" aria-labelledby="sortRegionsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sortRegionsModalLabel">Bölgeleri Sırala</h5>
            </div>
            <div class="modal-body">
                <p>Bölgeleri yukarı ve aşağı hareket ettirerek sıralarını düzenleyebilirsiniz.</p>
                <ul id="sortableRegions" class="list-group">
                    <!-- Bölgeler burada listelenecek -->
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="saveOrderBtn">Sıralamayı Kaydet</button>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.slimscroll/1.3.8/jquery.slimscroll.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(function () {
            // Sayfa yüklendiğinde ilk bölgeyi aktif yap
            var firstRegion = $('.regions-list .region-box').first();
            if (firstRegion.length > 0) {
                firstRegion.addClass('active');
                loadTablesForArea(firstRegion.data('id'));
            }

            // Bölgeye tıklama olayını yakala
            $('.regions-list').on('click', '.region-box', function () {
                var areaId = $(this).data('id');

                // Tıklanan bölgeyi aktif yap ve diğerlerini pasif yap
                $('.region-box').removeClass('active');
                $(this).addClass('active');

                // Masaları yükle
                loadTablesForArea(areaId);
            });

            // Masaları yükleme fonksiyonu
            function loadTablesForArea(areaId) {
                // Önceki masaları temizle
                $('.drop-area').empty();

                // AJAX ile bölgeye ait masaları getir
                $.ajax({
                    method: 'GET',
                    url: '/Table/GetTablesByArea', // Controller'daki metodun URL'si
                    data: { areaId: areaId }, // Gönderilecek veri
                    success: function (tables) {
                        // Masaları ekranda yerleştir
                        tables.forEach(function (table) {
                            var tableImage;

                            // Shape değerine göre görsel belirle
                            if (table.shape === 'Kare') {
                                tableImage = '/img/kare-masa.png';
                            } else if (table.shape === 'Yuvarlak') {
                                tableImage = '/img/yuvarlak-masa.png';
                            }

                            var tableElement = $('<div class="draggable-box" data-id="' + table.tableId + '"></div>');
                            tableElement.css({
                                left: table.posX + 'px',
                                top: table.posY + 'px'
                            });
                            tableElement.html(`
                                <div class="table-content">
                                    <img src="${tableImage}" alt="Masa" class="table-image">
                                    <span class="table-text">${table.tableName}</span>
                                </div>
                            `);
                            $('.drop-area').append(tableElement);
                        });

                        // Masaları sürüklenebilir hale getir
                        $(".draggable-box").draggable({
                            containment: ".drop-area",
                            stop: function (event, ui) {
                                var posX = ui.position.left;
                                var posY = ui.position.top;
                                var tableId = $(this).data('id');

                                $.ajax({
                                    method: 'POST',
                                    url: '/Table/UpdateTablePosition',
                                    contentType: 'application/json',
                                    data: JSON.stringify({
                                        tableId: tableId,
                                        posX: posX,
                                        posY: posY
                                    }),
                                    success: function (response) {
                                        console.log('Pozisyon güncellendi.');
                                    },
                                    error: function (xhr, status, error) {
                                        console.error('Pozisyon güncellenirken hata oluştu:', error);
                                    }
                                });
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Masalar yüklenirken hata oluştu:', error);
                    }
                });
            }
        });

        $(document).ready(function () {
            // Butona tıklama olayı
            $('.btn-addArea').on('click', function () {

                $('#listAreaModal').modal('hide');
                // Modalı aç
                $('#addAreaModal').modal('show');
            });
        });

        $(document).ready(function () {
            // Kaydet butonuna tıklama olayını yakalayın
            $('#addAreaModal .btn-primary').click(function () {
                var regionName = $('#regionName').val();

                // AJAX ile veriyi gönderin
                $.ajax({
                    url: '/Table/AddRegion', // Controller'daki Action method
                    type: 'POST',
                    data: { regionName: regionName }, // Gönderilen veri
                    success: function (response) {
                        if (response.success) {
                            // Başarılı kayıttan sonra modalı kapat
                            $('#regionModal').modal('hide');

                            // Bölge listesini güncelle veya başka bir işlem yap
                            alert('Bölge başarıyla eklendi!');
                            location.reload(); // Sayfayı yenileyerek listeyi güncelle
                        } else {
                            alert(response.message || 'Bölge eklenirken bir hata oluştu.');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Bölge eklenirken bir hata oluştu:', error);
                    }
                });
            });
        });

        $(document).ready(function () {
            // Bölgeleri Düzenle butonuna tıklama olayını yakalayın
            $('.btn-editArea').click(function () {
                // Modalı aç
                $('#listAreaModal').modal('show');

                // AJAX ile mevcut bölgeleri sunucudan çek
                $.ajax({
                    url: '/Table/GetRegions', // Bölge verilerini çekeceğiniz controller action
                    type: 'GET',
                    success: function (regions) {
                        // Bölge listesini temizle
                        $('#regionList').empty();

                        // Gelen bölgeleri listele
                        regions.forEach(function (region) {
                            var listItem = `
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    ${region.areaName}
                                    <a href="javascript:;" class="btn btn-edit-region" data-id="${region.tableAreaId}"><i class="fa-solid fa-pen"></i></a>
                                </li>
                            `;
                            $('#regionList').append(listItem);
                        });

                    },
                    error: function (xhr, status, error) {
                        console.error('Bölgeler yüklenirken hata oluştu:', error);
                    }
                });
            });
        });

        $(document).ready(function () {
            // Bölge düzenleme butonuna tıklama olayını yakala
            $(document).on('click', '.btn-edit-region', function () {
                var regionId = $(this).data('id'); // Tıklanan bölgenin ID'sini al

                $('#listAreaModal').modal('hide');
                // AJAX ile bölge bilgilerini getir
                $.ajax({
                    method: 'GET',
                    url: '/Table/GetRegionById', // Controller'daki metodun URL'si
                    data: { id: regionId }, // Gönderilecek veri
                    success: function (region) {
                        // Modal içeriğini güncelle
                        $('#editRegionName').val(region.areaName);
                        $('#updateAreaModal').data('id', regionId); // ID'yi modal veri olarak ayarla

                        // Modalı göster
                        $('#updateAreaModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        console.error('Bölge bilgileri yüklenirken hata oluştu:', error);
                    }
                });
            });
        });

        $(document).ready(function () {
            // Güncelleme butonuna tıklama olayını yakala
            $('#saveRegionBtn').on('click', function () {
                var regionId = $('#updateAreaModal').data('id'); // ID'yi modal veri olarak al
                var regionName = $('#editRegionName').val();

                // AJAX ile bölge adını güncelle
                $.ajax({
                    method: 'POST',
                    url: '/Table/UpdateRegion', // Controller'daki metodun URL'si
                    contentType: 'application/json',
                    data: JSON.stringify({
                        areaId: regionId,
                        areaName: regionName
                    }),
                    success: function (response) {
                        console.log('Güncelleme başarılı:', response);

                        // Modalı kapat
                        $('#updateAreaModal').modal('hide');

                        // Sayfayı güncelle veya bölgeler listesini yeniden yükle
                        location.reload(); // Sayfayı yenileyerek listeyi güncelle
                    },
                    error: function (xhr, status, error) {
                        console.error('Bölge güncellenirken hata oluştu:', error);
                        console.error('Hata yanıtı:', xhr.responseText); // Sunucudan dönen hata yanıtını kontrol et
                    }
                });
            });
        });

        $(document).ready(function () {
            $('.btn-moveArea').click(function () {
                $('#sortRegionsModal').modal('show');

                // AJAX ile mevcut bölgeleri sunucudan çek
                $.ajax({
                    url: '/Table/GetRegions', // Bölge verilerini çekeceğiniz controller action
                    type: 'GET',
                    success: function (regions) {
                        // Bölgeleri listele
                        var listItems = '';
                        regions.forEach(function (region) {
                            listItems += `
                                <li class="list-group-item d-flex justify-content-between align-items-center" data-id="${region.tableAreaId}">
                                    ${region.areaName}
                                    <i class="fa-solid fa-arrow-up-down"></i>
                                </li>
                            `;
                        });
                        $('#sortableRegions').html(listItems);

                        // Sortable özelliğini başlat
                        $('#sortableRegions').sortable({
                            placeholder: 'ui-state-highlight',
                            update: function (event, ui) {
                                // Sıra değiştirildiğinde yapılacak işlemler
                                var order = $(this).sortable('toArray', { attribute: 'data-id' });
                                console.log(order); // Mevcut sıra konsola yazdırılır
                            }
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Bölgeler yüklenirken hata oluştu:', error);
                    }
                });
            });

            $('#saveOrderBtn').on('click', function () {
                // Bölge ID'lerini sıraya göre topla
                var orderedIds = [];
                $('#sortableRegions li').each(function () {
                    var regionId = $(this).data('id');
                    orderedIds.push(regionId);
                });

                console.log(orderedIds); // Bu satır ekleyin: Gönderilen veriyi kontrol edin

                // AJAX ile sunucuya gönder
                $.ajax({
                    url: '/Table/UpdateRegionOrder',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(orderedIds),
                    success: function (response) {
                        alert('Sıralama başarıyla kaydedildi.');
                    },
                    error: function (xhr, status, error) {
                        console.error('Sıralama güncellenirken hata oluştu:', error);
                    }
                });
            });

        });






    </script>
}
